package com.ArrayListExample;

import java.time.LocalDateTime;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Comparator;

/**
 * This function is for searching the 
 *
 */
public class Sort {
	
	public static void search(String city, ArrayList<Employee> n1){
	  for(Employee i: n1){
		  if(city.equalsIgnoreCase(i.getCity())){
			  System.out.println(i);
		  }
	  }
	}
	/**
	 * @param args
	 */
	
	/**
	 * This is the main function
	 */
	public static void main(String[] args) {
		ArrayList<Employee> list = new ArrayList<Employee>();
		list.add(new Employee("Praveen", 50000, "Pune", LocalDateTime.of(1996, 05, 24, 22, 55)));
		list.add(new Employee("Harry", 8000.00, "pune", LocalDateTime.of(1994, 5, 29, 12, 00)));
		list.add(new Employee("Ron", 2200.00, "mumbai", LocalDateTime.of(1993, 11, 22, 11, 00)));
		list.add(new Employee("Lily", 4400.00, "mumbai", LocalDateTime.of(1995, 7, 11, 11, 00)));
		list.add(new Employee("Lisa", 5000.00, "delhi", LocalDateTime.of(1997, 7, 22, 11, 00)));
		list.add(new Employee("Tim", 9000.00, "delhi", LocalDateTime.of(1997, 6, 9, 11, 00)));
		list.add(new Employee("Bob", 4100.00, "bangalore", LocalDateTime.of(1997, 7, 15, 11, 00)));
		
		Collections.sort(list, new Comparator<Employee>() {

			@Override
			public int compare(Employee o1, Employee o2) {
				// TODO Auto-generated method stub
				
				return o2.getDob().compareTo(o1.getDob());			}
			
		});
		
//		System.out.println("Sorted salary is");
//		for(Employee o: list){
//			System.out.println(o);
//		}
		
		Collections.sort(list, new Comparator<Employee>() {

			@Override
			public int compare(Employee o1, Employee o2) {
				// TODO Auto-generated method stub
				
				return Double.compare(o2.getSalary(), o1.getSalary());			}
			
		});
//		System.out.println("Sorted salary is");
//		for(Employee o: list){
//			System.out.println(o);
//		}
		
//		search("Pune", list);
		double sum=0;
		int count=0;
		for(Employee e1: list){
			sum=sum+e1.getSalary();
			count++;
			
			
		}
		System.out.println(sum/count);
	}

}
